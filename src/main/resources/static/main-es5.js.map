{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/activate/activate.component.ts","webpack:///src/app/activate/activate.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/authentication.service.ts","webpack:///src/app/data-filter.pipe.ts","webpack:///src/app/data-grid/data-grid.component.ts","webpack:///src/app/data-grid/data-grid.component.html","webpack:///src/app/data-sort.pipe.ts","webpack:///src/app/edit-task/edit-task.component.ts","webpack:///src/app/edit-task/edit-task.component.html","webpack:///src/app/forgot-password/forgot-password.component.ts","webpack:///src/app/forgot-password/forgot-password.component.html","webpack:///src/app/free.guard.ts","webpack:///src/app/http-interceptor.service.ts","webpack:///src/app/loading-spinner.service.ts","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/nav-bar/nav-bar.component.html","webpack:///src/app/ng9-loading-spinner/ng9-loading-spinner.component.ts","webpack:///src/app/ng9-loading-spinner/ng9-loading-spinner.component.html","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/reset-password/reset-password.component.ts","webpack:///src/app/reset-password/reset-password.component.html","webpack:///src/app/shared/AppSettings.ts","webpack:///src/app/shared/Util.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/sign-in/sign-in.component.ts","webpack:///src/app/sign-in/sign-in.component.html","webpack:///src/app/sign-up/sign-up.component.ts","webpack:///src/app/sign-up/sign-up.component.html","webpack:///src/app/task/task.component.ts","webpack:///src/app/task/task.component.html","webpack:///src/app/todo.service.ts","webpack:///src/app/todo/todo.component.ts","webpack:///src/app/todo/todo.component.html","webpack:///src/app/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ActivateComponent","router","authService","queryParamMap","subscribe","ele","token","get","console","log","activateUserAccount","response","isSuccess","error","selector","templateUrl","styleUrls","routes","path","pathMatch","redirectTo","component","canActivate","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","authenticationService","next","state","isAuthenticated","navigate","r","isLoggedIn","providedIn","AuthService","http","SIGN_IN_URL","SIGN_UP_URL","PASSWORD_RESET_LINK_URL","ACTIVATE_USER_ACCOUNT_URL","PASSWORD_RESET_URL","signIn","param","post","APP_BASE_URL","pipe","res","signUp","getResetPasswordLink","emailOrUsername","resetPassword","signOut","localStorage","getItem","LOCAL_AUTH_TOKEN","removeItem","AuthenticationService","DataFilterPipe","value","searchTerm","key","length","obj","isArrayOfObjects","hasOwnProperty","filter","val","toString","toLowerCase","includes","toLocaleLowerCase","name","DataGridComponent","bsModalService","todoService","row","prop","orderBy","deleteEmitter","updateEmitter","util","bsEditTaskModalRef","appSetting","doOrder","getClass","deleteTodo","emit","editTodo","todo","initialState","show","content","updateUpto","status","Object","assign","updateTodo","DataSortPipe","direction","sort","a","b","val1","val2","EditTaskComponent","bsModalRef","fb","tags","priorities","onTagSelected","tag","task","controls","setValue","onPrioritySelected","priority","duedate","hide","bsConfig","containerClass","dateInputFormat","minDate","Date","group","ForgotPasswordComponent","bsConfirmationModalRef","onSubmit","forgot","valid","usernameEmail","template","reset","required","FreeGuard","HttpInterceptorService","auth","loadingSpinnerService","clone","headers","set","HEADER_STRING","TOKEN_PREFIX","handle","event","LoadingSpinnerService","spinnerService$","getStatus","asObservable","NavBarComponent","userService","getUserProfile","getUserDetails","username","logOut","Ng9LoadingSpinnerComponent","flag$","PageNotFoundComponent","ResetPasswordComponent","activatedRoute","userNameOrEmail","password","minLength","AppSettings","LOCAL_AUTH_USER","TODO_ALL","STATUS_NEW","STATUS_IN_PROGRESS","STATUS_COMPLETED","STATUS_OVERDUE","Util","getTagClass","getPriorityClass","getStatusClass","SharedModule","SignInComponent","errors","submit","loginFrm","invalid","handleToken","push","statusText","message","collectErrors","form","tokenResponse","setItem","accessToken","SignUpComponent","isUseNameAvailable","isEmailAvailable","errMessage","request","email","checkUserNameAlreadyAvailable","isUserNameAlreadyExists","checkEmailAlreadyAvailable","isEmailAlreadyExists","TaskComponent","taskName","dates","selectedTag","selectedPriority","selectedDate","bsInlineValue","btnName","defaultStatus","saveEmitter","saveNewTask","saveTodo","onDateSelected","dt","init","setDate","getDate","label","TodoService","MOCK_URL","ALL_TODO_URL","SAVE_TODO_URL","UPDATE_TODO_URL","DELETE_TODO_URL","FIND_TODO_URL","getAllTodos","put","findTodo","TodoComponent","bsModelService","todoList","columnDefs","bsTaskModalRef","getBadgeCount","getAllTodo","openTaskComp","data","filterData","getColumnsDef","displayName","width","UserService","USER_ME_URL","IS_EMAIL_EXISTS_URL","IS_USERNAME_EXISTS_URL","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {AuthService} from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-activate',\r\n  templateUrl: './activate.component.html',\r\n  styleUrls: ['./activate.component.css']\r\n})\r\nexport class ActivateComponent implements OnInit {\r\n  isSuccess: boolean;\r\n  token: string;\r\n\r\n  constructor(private router: ActivatedRoute, private authService: AuthService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.router.queryParamMap.subscribe(ele => {\r\n      this.token = ele.get('token');\r\n      if (this.token) {\r\n        console.log('token is available');\r\n        this.authService.activateUserAccount(this.token)\r\n          .subscribe((response) => {\r\n            this.isSuccess = true;\r\n            console.log('User account activated successfully', response);\r\n          }, error => {\r\n            this.isSuccess = false;\r\n            console.log('error while activating user account', error);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isSuccess\" class=\"login-section container-center lg\">\r\n  <div class=\"card\">\r\n    <div class=\"card-body text-center\">\r\n      <h3><span aria-hidden=\"true\" class=\"fa fa-check-circle success-icon\"></span></h3>\r\n      <h3>Your MyTodo Account Activated Successfully</h3>\r\n      <p><a class=\"btn btn-success btn-rounded btn-sm\" routerLink=\"/signin\">Login</a></p>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {TodoComponent} from './todo/todo.component';\r\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\r\nimport {SignInComponent} from \"./sign-in/sign-in.component\";\r\nimport {SignUpComponent} from \"./sign-up/sign-up.component\";\r\nimport {AuthGuard} from \"./auth.guard\";\r\nimport {FreeGuard} from \"./free.guard\";\r\nimport {ForgotPasswordComponent} from \"./forgot-password/forgot-password.component\";\r\nimport {ResetPasswordComponent} from \"./reset-password/reset-password.component\";\r\nimport {ActivateComponent} from \"./activate/activate.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    redirectTo: 'todo'\r\n  }, {\r\n    path: 'todo',\r\n    component: TodoComponent,\r\n    canActivate: [AuthGuard]\r\n  }, {\r\n    path: 'signin',\r\n    component: SignInComponent,\r\n    canActivate: [FreeGuard]\r\n  }, {\r\n    path: 'signup',\r\n    component: SignUpComponent,\r\n    canActivate: [FreeGuard]\r\n  }, {\r\n    path: 'forgot',\r\n    component: ForgotPasswordComponent,\r\n    canActivate: [FreeGuard]\r\n  }, {\r\n    path: 'reset',\r\n    component: ResetPasswordComponent,\r\n    canActivate: [FreeGuard]\r\n  }, {\r\n    path: 'activate',\r\n    component: ActivateComponent,\r\n    canActivate: [FreeGuard]\r\n  }, {\r\n    path: '**',\r\n    component: PageNotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'todoApp';\r\n}\r\n","<app-ng9-loading-spinner></app-ng9-loading-spinner>\r\n<app-nav-bar></app-nav-bar>\r\n<div class=\"container-fluid pt-2\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n<div class=\"footer\">\r\n  <p class=\"text-center\">Designed and developed by karthik <span class=\"fa fa-heart\" aria-hidden=\"true\" style=\"color: #EF3D4F\"></span> Reach me out <span class=\"fa fa-envelope pl-0 pr-1\" aria-hidden=\"true\" style=\"color: #EF3D4F\"></span>karthik.infotec98@gmail.com</p>\r\n</div>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {HttpClientModule, HTTP_INTERCEPTORS} from \"@angular/common/http\";\r\nimport {ScrollDispatcher, ScrollingModule} from '@angular/cdk/scrolling';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {TodoComponent} from './todo/todo.component';\r\nimport {TaskComponent} from './task/task.component';\r\nimport {NavBarComponent} from './nav-bar/nav-bar.component';\r\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\r\nimport {DataGridComponent} from './data-grid/data-grid.component';\r\nimport {DataSortPipe} from './data-sort.pipe';\r\nimport {DataFilterPipe} from './data-filter.pipe';\r\nimport { SignInComponent } from './sign-in/sign-in.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport {HttpInterceptorService} from \"./http-interceptor.service\";\r\nimport {SharedModule} from \"./shared/shared.module\";\r\nimport {PopoverModule} from \"ngx-bootstrap/popover\";\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { Ng9LoadingSpinnerComponent } from './ng9-loading-spinner/ng9-loading-spinner.component';\r\nimport { EditTaskComponent } from './edit-task/edit-task.component';\r\nimport { ActivateComponent } from './activate/activate.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TodoComponent,\r\n    TaskComponent,\r\n    NavBarComponent,\r\n    PageNotFoundComponent,\r\n    DataGridComponent,\r\n    DataSortPipe,\r\n    DataFilterPipe,\r\n    SignInComponent,\r\n    SignUpComponent,\r\n    Ng9LoadingSpinnerComponent,\r\n    EditTaskComponent,\r\n    ActivateComponent,\r\n    ResetPasswordComponent,\r\n    ForgotPasswordComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    ScrollingModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    PopoverModule.forRoot(),\r\n    BsDatepickerModule.forRoot(),\r\n    TooltipModule.forRoot()\r\n  ],\r\n  providers: [ScrollDispatcher,{ provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorService, multi: true }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {AuthenticationService} from './authentication.service';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n\r\n  constructor(private authenticationService: AuthenticationService, private router: Router, private authService: AuthService) {\r\n  }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (!this.authenticationService.isAuthenticated()) {\r\n      this.router.navigate(['signin']).then(r => console.log('Is Not Authenticated', r));\r\n      return false;\r\n    }\r\n    this.authService.isLoggedIn.next(true);\r\n    return true;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {BehaviorSubject, Observable, throwError} from 'rxjs';\r\nimport {map, catchError} from 'rxjs/operators';\r\nimport {SignUpRequest, SignInRequest, JwtAuthenticationResponse, ResetPasswordRequest} from './shared/model';\r\nimport {AppSettings} from './shared/AppSettings';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private readonly SIGN_IN_URL = 'api/v1/auth/signin';\r\n  private readonly SIGN_UP_URL = 'api/v1/auth/signup';\r\n  private readonly PASSWORD_RESET_LINK_URL = 'api/v1/auth/getResetPasswordLink/';\r\n  private readonly ACTIVATE_USER_ACCOUNT_URL = 'api/v1/auth/activateUserAccount/';\r\n  private readonly PASSWORD_RESET_URL = 'api/v1/auth/resetPassword';\r\n  isLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n  signIn = (param: SignInRequest): Observable<JwtAuthenticationResponse> => {\r\n    return this.http.post<JwtAuthenticationResponse>(AppSettings.APP_BASE_URL + `${this.SIGN_IN_URL}`, param)\r\n      .pipe(map((res: JwtAuthenticationResponse) => res),\r\n        catchError((error) => {\r\n          console.log('Error while SignInRequest', error);\r\n          return throwError(error);\r\n        }));\r\n  }\r\n\r\n  signUp = (param: SignUpRequest): Observable<any> => {\r\n    return this.http.post<Observable<any>>(AppSettings.APP_BASE_URL + `${this.SIGN_UP_URL}`, param)\r\n      .pipe(map((res) => res),\r\n        catchError((error) => {\r\n          console.log('Error while SignUpRequest', error);\r\n          return throwError(error);\r\n        }));\r\n  }\r\n\r\n  getResetPasswordLink = (emailOrUsername: string) => {\r\n    return this.http.get(AppSettings.APP_BASE_URL + `${this.PASSWORD_RESET_LINK_URL}` + emailOrUsername)\r\n      .pipe(map((res) => res),\r\n        catchError((error) => {\r\n          console.log('Error while getPasswordResetLink', error);\r\n          return throwError(error);\r\n        }));\r\n  }\r\n\r\n  resetPassword = (param: ResetPasswordRequest) => {\r\n    return this.http.post(AppSettings.APP_BASE_URL + `${this.PASSWORD_RESET_URL}`, param)\r\n      .pipe(map((res) => res),\r\n        catchError((error) => {\r\n          console.log('Error while resetPassword', error);\r\n          return throwError(error);\r\n        }));\r\n  }\r\n\r\n  activateUserAccount = (token: string) => {\r\n    return this.http.get(AppSettings.APP_BASE_URL + `${this.ACTIVATE_USER_ACCOUNT_URL}` + token)\r\n      .pipe(map((res) => res),\r\n        catchError((error) => {\r\n          console.log('Error while activateUserAccount', error);\r\n          return throwError(error);\r\n        }));\r\n  }\r\n\r\n  signOut = (): void => {\r\n    if (localStorage.getItem(AppSettings.LOCAL_AUTH_TOKEN) !== null) {\r\n      localStorage.removeItem(AppSettings.LOCAL_AUTH_TOKEN);\r\n      this.isLoggedIn.next(false);\r\n      this.router.navigate(['signin']).then(r => {\r\n        console.log('Sign Out Successfully', r);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { AppSettings } from './shared/AppSettings';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  constructor() {\r\n  }\r\n\r\n  isAuthenticated = (param?: any) => {\r\n    return localStorage.getItem(AppSettings.LOCAL_AUTH_TOKEN) !== null;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dataFilter'\r\n})\r\nexport class DataFilterPipe implements PipeTransform {\r\n\r\n  transform(value: any, searchTerm: string, key?: string): any {\r\n    if (!value) {\r\n      return [];\r\n    }\r\n    if (!searchTerm) {\r\n      return value;\r\n    }\r\n    if (value.length > 0) {\r\n      const obj = value[0];\r\n      const isArrayOfObjects: boolean = typeof (obj) === 'object';\r\n      if (isArrayOfObjects && !obj.hasOwnProperty(key)) {\r\n        return value;\r\n      }\r\n      return [...value.filter(ele => {\r\n        const val = isArrayOfObjects ? ele[key] : ele;\r\n        return val.toString().toLowerCase().includes(searchTerm.toLocaleLowerCase());\r\n      })];\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { Todo, ColumnDef } from '../shared/model';\r\nimport { TodoService } from '../todo.service';\r\nimport { Util } from '../shared/Util';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { EditTaskComponent } from '../edit-task/edit-task.component';\r\nimport {AppSettings} from '../shared/AppSettings';\r\n@Component({\r\n  selector: 'app-data-grid',\r\n  templateUrl: './data-grid.component.html',\r\n  styleUrls: ['./data-grid.component.css'],\r\n})\r\nexport class DataGridComponent implements OnInit {\r\n  @Input() todoList: Todo[];\r\n  @Input() columnDefs: ColumnDef[];\r\n  @Input() height;\r\n  row = -1;\r\n  prop = '';\r\n  orderBy = 'asc';\r\n  @Output() deleteEmitter: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() updateEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  util = Util;\r\n  bsEditTaskModalRef: BsModalRef = null;\r\n  appSetting = AppSettings;\r\n  constructor(\r\n    private bsModalService: BsModalService,\r\n    private todoService: TodoService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  doOrder = (prop: string): void => {\r\n    this.prop = prop;\r\n    this.orderBy = this.orderBy === 'asc' ? 'desc' : 'asc';\r\n  }\r\n\r\n  getClass = (prop: string) => {\r\n    return {\r\n      'fa-sort': prop !== this.prop,\r\n      'fa-caret-up': prop === this.prop && this.orderBy === 'asc',\r\n      'fa-caret-down': prop === this.prop && this.orderBy === 'desc',\r\n    };\r\n  }\r\n\r\n  deleteTodo = (id: string): void => {\r\n    this.deleteEmitter.emit(id);\r\n  }\r\n\r\n  editTodo = (todo: Todo): void => {\r\n    const initialState = {\r\n      todo,\r\n      class: 'modal-lg',\r\n    };\r\n    this.bsEditTaskModalRef = this.bsModalService.show(EditTaskComponent, {\r\n      initialState,\r\n    });\r\n    this.bsEditTaskModalRef.content.updateEmitter.subscribe((response) => {\r\n      this.updateEmitter.emit(response);\r\n    });\r\n  }\r\n\r\n    updateUpto = (todo: Todo, status: string): void => {\r\n    const param = Object.assign({}, todo);\r\n    param.status = status;\r\n    this.todoService.updateTodo(param).subscribe(\r\n      (response) => {\r\n        this.updateEmitter.emit(response);\r\n        console.log('Todo updated successfully', response);\r\n      },\r\n      (error) => {\r\n        console.log('error while updating todo', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<cdk-virtual-scroll-viewport [ngStyle]=\"{'height.px':height}\" itemSize=\"50\">\r\n  <table class=\"table table-hover table-dark\">\r\n    <thead>\r\n    <tr>\r\n      <th (click)=\"doOrder(col.prop)\" *ngFor=\"let col of columnDefs\" [ngStyle]=\"{'width.%':col.width? col.width:0}\">\r\n        <span>{{col.displayName}}</span>\r\n        <span *ngIf=\"col.prop!=''\" [ngClass]=\"getClass(col.prop)\" class=\"pl-2 fa sort-icon\"></span>\r\n      </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr (mouseleave)=\"row=-1\" (mouseover)=\"row=i\"\r\n        *cdkVirtualFor=\"let todo of todoList | dataSort:orderBy:prop; let i = index;\">\r\n      <td>{{todo.id}}</td>\r\n      <td>{{todo.name}}</td>\r\n      <td><span [ngClass]=\"util.getTagClass(todo.tag)\" aria-hidden=\"true\" class=\"fa fa-tag pr-1\"></span>{{todo.tag}}\r\n      </td>\r\n      <td><span [ngClass]=\"util.getPriorityClass(todo.priority)\" aria-hidden=\"true\"\r\n                class=\"fa fa-flag pr-1\"></span>{{todo.priority}}</td>\r\n      <td><span [ngClass]=\"util.getStatusClass(todo.status)\" class=\"badge badge-chip\">{{todo.status}}</span></td>\r\n      <td>{{todo.duedate}}</td>\r\n      <td *ngIf=\"row!=i\"></td>\r\n      <td *ngIf=\"row==i\">\r\n        <span (click)=\"updateUpto(todo,appSetting.STATUS_IN_PROGRESS)\" *ngIf=\"todo.status==appSetting.STATUS_NEW\"\r\n              aria-hidden=\"true\" class=\"fa fa-thumb-tack action-icons pr-2 pl-1\" tooltip=\"Click To Start\"></span>\r\n        <span (click)=\"updateUpto(todo,appSetting.STATUS_COMPLETED)\" *ngIf=\"todo.status==appSetting.STATUS_IN_PROGRESS\"\r\n              aria-hidden=\"true\"\r\n              class=\"fa fa-check-square-o action-icons pr-2\" tooltip=\"Mark As Complete\"></span>\r\n        <span (click)=\"editTodo(todo);\"\r\n              *ngIf=\"todo.status==appSetting.STATUS_IN_PROGRESS || todo.status==appSetting.STATUS_NEW\"\r\n              aria-hidden=\"true\"\r\n              class=\"fa fa-pencil-square-o action-icons pr-2\" tooltip=\"Edit\"></span>\r\n        <span (click)=\"deleteTodo(todo.id)\" aria-hidden=\"true\" class=\"fa fa-trash-o action-icons\"\r\n              tooltip=\"Delete\"></span>\r\n      </td>\r\n    </tr>\r\n    <tr *ngIf=\"todoList.length==0\">\r\n      <td [attr.colspan]=\"columnDefs.length\" class=\"text-center\">\r\n        No tasks in this filter at the moment <span><i aria-hidden=\"true\" class=\"fa fa-meh-o pl-1\"></i></span>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</cdk-virtual-scroll-viewport>\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dataSort'\r\n})\r\nexport class DataSortPipe implements PipeTransform {\r\n\r\n  transform(value: any, orderBy: string, key?: string): any {\r\n    if (!value) {\r\n      return [];\r\n    }\r\n    if (value.length > 0) {\r\n      const obj = value[0];\r\n      const isArrayOfObjects: boolean = typeof (obj) === 'object';\r\n      const direction = orderBy === 'asc' ? -1 : 1;\r\n      return [...value.sort((a, b) => {\r\n        const val1 = isArrayOfObjects ? a[key] : a;\r\n        const val2 = isArrayOfObjects ? b[key] : b;\r\n        if (typeof val1 === 'string') {\r\n          return val1 > val2 ? direction * -1 : direction * 1;\r\n        } else if (typeof val1 === 'number') {\r\n          return val1 - val2 > 0 ? direction * -1 : direction * 1;\r\n        }\r\n      })];\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport {Todo} from '../shared/model';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Util} from '../shared/Util';\r\nimport {BsDatepickerConfig} from 'ngx-bootstrap/datepicker';\r\nimport {TodoService} from '../todo.service';\r\n@Component({\r\n  selector: 'app-edit-task',\r\n  templateUrl: './edit-task.component.html',\r\n  styleUrls: ['./edit-task.component.css']\r\n})\r\nexport class EditTaskComponent implements OnInit {\r\n  tags = ['General', 'Home', 'Office', 'Personal'];\r\n  priorities = ['Low', 'Medium', 'High'];\r\n  todo: Todo;\r\n  task: FormGroup;\r\n  util = Util;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  minDate: Date;\r\n  @Output() updateEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n  constructor(private bsModalRef: BsModalRef, private fb: FormBuilder, private todoService: TodoService) {\r\n   }\r\n  ngOnInit(): void {\r\n    this.bsConfig = Object.assign({}, {containerClass: 'theme-red', dateInputFormat: 'YYYY-MM-DD'});\r\n    this.minDate = new Date(this.todo.duedate);\r\n    this.task = this.fb.group({\r\n     name: [this.todo.name],\r\n     tag: [this.todo.tag],\r\n     priority: [this.todo.priority],\r\n     duedate: [new Date(this.todo.duedate)]\r\n   });\r\n  }\r\n\r\n  onTagSelected = (tag: string): void => {\r\n   this.task.controls.tag.setValue(tag);\r\n  }\r\n\r\n  onPrioritySelected = (priority: string): void => {\r\n    this.task.controls.priority.setValue(priority);\r\n  }\r\n\r\n  updateTodo = (): void => {\r\n    const param = Object.assign({}, this.todo);\r\n    param.name = this.task.controls.name.value;\r\n    param.tag = this.task.controls.tag.value;\r\n    param.priority = this.task.controls.priority.value;\r\n    param.duedate = this.task.controls.duedate.value;\r\n    this.todoService.updateTodo(param)\r\n    .subscribe((response) => {\r\n      console.log('Todo Updated For Id', param.id);\r\n      this.bsModalRef.hide();\r\n      this.updateEmitter.emit(response);\r\n    }, error => {\r\n      console.log('Error while updating todo', error);\r\n      this.bsModalRef.hide();\r\n    });\r\n  }\r\n}\r\n","<div class=\"modal-body\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12 col-md-12 col-lg-12\">\r\n      <form [formGroup]=\"task\" autocomplete=\"off\">\r\n        <div class=\"form-group\">\r\n          <label for=\"name\">Name :</label>\r\n          <input class=\"form-control\" formControlName=\"name\" id=\"name\" name=\"name\" type=\"text\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"duedate\">Duedate :</label>\r\n          <input [bsConfig]=\"bsConfig\" [minDate]=\"minDate\" [outsideClick]=\"true\" bsDatepicker\r\n                 class=\"form-control readonly-txt\" formControlName=\"duedate\" id=\"duedate\" name=\"duedate\"\r\n                 readonly=\"\" type=\"text\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"tag\">Tag :<span [ngClass]=\"util.getTagClass(task.controls['tag'].value)\" aria-hidden=\"true\"\r\n                                      class=\"fa fa-tag pl-2\"></span></label>\r\n          <input #pop1=\"bs-popover\" [outsideClick]=\"true\" [popover]=\"tagTemp\" class=\"form-control readonly-txt\"\r\n                 formControlName=\"tag\" id=\"tag\" name=\"tag\" placement=\"bottom\"\r\n                 readonly=\"\" type=\"text\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"priority\">Priority : <span [ngClass]=\"util.getPriorityClass(task.controls['priority'].value)\"\r\n                                                 aria-hidden=\"true\" class=\"fa fa-flag pr-1\"></span></label>\r\n          <input #pop2=\"bs-popover\" [outsideClick]=\"true\" [popover]=\"priorityTemp\"\r\n                 class=\"form-control readonly-txt\" class=\"form-control readonly-txt\" formControlName=\"priority\" id=\"priority\" name=\"priority\"\r\n                 placement=\"bottom\" readonly=\"\" type=\"text\">\r\n        </div>\r\n        <div>\r\n          <button (click)=\"updateTodo()\" class=\"btn btn-danger btn-rounded btn-sm\">Save Changes</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--Tag Window Template-->\r\n<ng-template #tagTemp>\r\n  <ul class=\"tag-dropdown\">\r\n    <li (click)=\"onTagSelected(tag);pop1.hide()\" *ngFor=\"let tag of tags\"\r\n        [ngClass]=\"task.controls['tag'].value==tag?'tag-active':''\" [value]=\"tag\" class=\"tag-dropdown-item\"><span\r\n      [ngClass]=\"util.getTagClass(tag)\" aria-hidden=\"true\" class=\"fa fa-tag pr-2\"></span>{{tag}}</li>\r\n  </ul>\r\n</ng-template>\r\n\r\n<!--Priority Window Template -->\r\n<ng-template #priorityTemp>\r\n  <ul class=\"priority-dropdown\">\r\n    <li (click)=\"onPrioritySelected(priority);pop2.hide()\" *ngFor=\"let priority of priorities\"\r\n        [ngClass]=\"task.controls['priority'].value==priority?'priority-active':''\" [value]=\"priority\"\r\n        class=\"priority-dropdown-item\">\r\n      <span [ngClass]=\"util.getPriorityClass(priority)\" aria-hidden=\"true\" class=\"fa fa-flag pr-1\"></span>{{priority}}\r\n    </li>\r\n  </ul>\r\n</ng-template>\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {AuthService} from '../auth.service';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  forgot: FormGroup;\r\n  bsConfirmationModalRef: BsModalRef = null;\r\n  @ViewChild('template') template;\r\n\r\n  constructor(private fb: FormBuilder, private authService: AuthService, public bsModalService: BsModalService) {\r\n    this.forgot = this.fb.group(({\r\n      usernameEmail: ['', [Validators.required]]\r\n    }));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit = () => {\r\n    if (this.forgot.valid) {\r\n      this.authService.getResetPasswordLink(this.forgot.controls.usernameEmail.value)\r\n        .subscribe(ele => {\r\n          const initialState = {\r\n            class: 'modal-lg modal-dialog-centered',\r\n          };\r\n          this.bsConfirmationModalRef = this.bsModalService.show(\r\n            this.template,\r\n            initialState\r\n          );\r\n          this.forgot.reset();\r\n          console.log('Email or Username validated successfully');\r\n        }, error => {\r\n          console.log(error);\r\n          console.log('Error while validating username or email');\r\n        });\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"login-section container-center\">\r\n  <div class=\"view-header\">\r\n    <div class=\"header-icon\">\r\n      <span aria-hidden=\"true\" class=\"fa fa-unlock-alt\"></span>\r\n    </div>\r\n    <div class=\"header-title\">\r\n      <h3>Forgot Password</h3>\r\n      <small class=\"help-block small\">\r\n        Please enter your credentials.\r\n      </small>\r\n    </div>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <form (submit)=\"onSubmit()\" [formGroup]=\"forgot\" autocomplete=\"off\">\r\n        <div class=\"form-group\">\r\n          <label for=\"usernameEmail\">Username Or Email<span class=\"pl-1 required\">*</span></label>\r\n          <input class=\"form-control\" formControlName=\"usernameEmail\" id=\"usernameEmail\"\r\n                 name=\"usernameEmail\" placeholder=\"Enter your username or email\" type=\"text\">\r\n          <span class=\"help-block small\">Enter your valid username or email to validate</span>\r\n        </div>\r\n        <div>\r\n          <button [disabled]=\"forgot.invalid\" class=\"btn btn-danger btn-rounded btn-sm\">Validate</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-body text-center\" style=\"cursor: pointer;\">\r\n    <h3><span aria-hidden=\"true\" class=\"fa fa-check-circle success-icon\"></span></h3>\r\n    <p>We have send password reset link to your registered mail</p>\r\n  </div>\r\n</ng-template>\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {AuthenticationService} from './authentication.service';\r\nimport {AuthService} from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FreeGuard implements CanActivate {\r\n  constructor(private authenticationService: AuthenticationService, private router: Router, private authService: AuthService) {\r\n  }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (this.authenticationService.isAuthenticated()) {\r\n      this.authService.isLoggedIn.next(true);\r\n      this.router.navigate(['/']).then(r => console.log(r));\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpResponse,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { AppSettings } from './shared/AppSettings';\r\nimport { LoadingSpinnerService } from './loading-spinner.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpInterceptorService {\r\n  constructor(\r\n    private auth: AuthenticationService,\r\n    private loadingSpinnerService: LoadingSpinnerService\r\n  ) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    this.loadingSpinnerService.show();\r\n\r\n    if (this.auth.isAuthenticated()) {\r\n      req = req.clone({\r\n        headers: req.headers.set(\r\n          AppSettings.HEADER_STRING,\r\n          AppSettings.TOKEN_PREFIX +\r\n            localStorage.getItem(AppSettings.LOCAL_AUTH_TOKEN)\r\n        ),\r\n      });\r\n    }\r\n    return next.handle(req).pipe(\r\n      map((event: HttpEvent<any>) => {\r\n        if (event instanceof HttpResponse) {\r\n          this.loadingSpinnerService.hide();\r\n        }\r\n        return event;\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        console.log('its error');\r\n        this.loadingSpinnerService.hide();\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingSpinnerService {\r\n  spinnerService$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  constructor() {\r\n  }\r\n\r\n  show = (param?: any): void => {\r\n    this.spinnerService$.next(true);\r\n  }\r\n  hide = (param?: any): void => {\r\n    this.spinnerService$.next(false);\r\n  }\r\n  getStatus = (param?: any): Observable<any> => {\r\n    return this.spinnerService$.asObservable();\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../auth.service';\r\nimport {UserService} from '../user.service';\r\nimport {UserDetailResponse} from '../shared/model';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  username: string;\r\n  isLoggedIn: boolean;\r\n\r\n  constructor(private auth: AuthService, private userService: UserService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.auth.isLoggedIn.subscribe((res) => {\r\n      this.isLoggedIn = res;\r\n      if (this.isLoggedIn) {\r\n        this.getUserProfile();\r\n      }\r\n    });\r\n  }\r\n\r\n  getUserProfile = (): void => {\r\n    this.userService.getUserDetails().subscribe((response: UserDetailResponse) => {\r\n      this.username = response.username;\r\n      console.log('user profile retrieved successfully' , response);\r\n    }, (error) => {\r\n      console.log('error while retrieving user profile', error);\r\n    });\r\n  }\r\n\r\n  logOut = (): void => {\r\n    this.auth.signOut();\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" routerLink=\"/\">\r\n    <i aria-hidden=\"true\" class=\"fa fa fa-check-square pr-0\"></i>\r\n    MyTodo\r\n  </a>\r\n  <ul *ngIf=\"isLoggedIn && username!=''\" class=\"nav navbar-nav ml-auto\">\r\n    <li class=\"nav-item user-block\">\r\n      <img alt=\"\" height=\"40\" src=\"./assets/Bull-48.png\">\r\n      <span [innerHTML]=\"username\" class=\"ml-1 user-name\"></span>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a (click)=\"logOut()\" class=\"ml-2 mt-1 btn btn-danger btn-rounded btn-sm\" href=\"javascript:void(0)\">Logout <span\r\n        aria-hidden=\"true\" class=\"pl-1 fa fa-sign-out\"></span></a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {LoadingSpinnerService} from '../loading-spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-ng9-loading-spinner',\r\n  templateUrl: './ng9-loading-spinner.component.html',\r\n  styleUrls: ['./ng9-loading-spinner.component.css']\r\n})\r\nexport class Ng9LoadingSpinnerComponent implements OnInit {\r\n  flag$: Observable<boolean>;\r\n  constructor(private loadingSpinnerService: LoadingSpinnerService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getStatus();\r\n  }\r\n\r\n  private getStatus = (): void => {\r\n    this.flag$ = this.loadingSpinnerService.getStatus();\r\n  }\r\n\r\n}\r\n","<div class=\"loading-wrapper\" *ngIf=\"flag$|async;let status;\">\r\n  <div class=\"overlay\">\r\n    <div class=\"spinner\"></div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>page-not-found works!</p>\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport {ResetPasswordRequest} from '../shared/model';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {AuthService} from '../auth.service';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  token: string;\r\n  reset: FormGroup;\r\n  @ViewChild('template') template;\r\n  bsConfirmationModalRef: BsModalRef = null;\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor(private fb: FormBuilder, private activatedRoute: ActivatedRoute, private authService: AuthService, public bsModalService: BsModalService) {\r\n    this.reset = this.fb.group({\r\n      usernameEmail: ['', [Validators.required]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.queryParamMap.subscribe((ele) => {\r\n      this.token = ele.get('token');\r\n    });\r\n  }\r\n\r\n  onSubmit = () => {\r\n    if (this.reset.valid) {\r\n      const param: ResetPasswordRequest = {\r\n        userNameOrEmail: this.reset.controls.usernameEmail.value,\r\n        password: this.reset.controls.password.value,\r\n        token: this.token\r\n      };\r\n      if (this.token) {\r\n        this.authService.resetPassword(param)\r\n          .subscribe((response) => {\r\n            const initialState = {\r\n              class: 'modal-lg modal-dialog-centered',\r\n            };\r\n            this.bsConfirmationModalRef = this.bsModalService.show(\r\n              this.template,\r\n              initialState\r\n            );\r\n            this.reset.reset();\r\n            console.log('user password changed successfully', response);\r\n          }, error => {\r\n            console.log('Error while changing user password', error);\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"login-section container-center\">\r\n  <div class=\"view-header\">\r\n    <div class=\"header-icon\">\r\n      <span class=\"fa fa-unlock\" aria-hidden=\"true\"></span>\r\n    </div>\r\n    <div class=\"header-title\">\r\n      <h3>Reset Password</h3>\r\n      <small class=\"help-block small\">\r\n        Please enter your credentials.\r\n      </small>\r\n    </div>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"reset\" (submit)=\"onSubmit()\" autocomplete=\"off\">\r\n        <div class=\"form-group\">\r\n          <label for=\"usernameEmail\">Username Or Email<span class=\"pl-1 required\">*</span></label>\r\n          <input type=\"text\" id=\"usernameEmail\" placeholder=\"Enter your username or email\" name=\"usernameEmail\"\r\n                 formControlName=\"usernameEmail\" class=\"form-control\">\r\n          <span class=\"help-block small\">Enter your valid username or email to validate</span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"usernameEmail\">Password<span class=\"pl-1 required\">*</span></label>\r\n          <input type=\"password\" placeholder=\"******\" id=\"password\" name=\"password\" formControlName=\"password\"\r\n                 class=\"form-control\">\r\n          <span class=\"help-block small\">Your hard to guess new password (minimum 6 characters)</span>\r\n        </div>\r\n        <div>\r\n          <button [disabled]=\"reset.invalid\" class=\"btn btn-danger btn-rounded btn-sm\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #template>\r\n  <div class=\"modal-body text-center\" style=\"cursor: pointer;\">\r\n    <h3><span class=\"fa fa-check-circle success-icon\" aria-hidden=\"true\"></span></h3>\r\n    <p>Your Password Changed Successfully</p>\r\n    <p><a routerLink=\"/signin\" class=\"btn btn-success btn-rounded btn-sm\"\r\n          (click)=\"bsConfirmationModalRef.hide()\">Login</a></p>\r\n  </div>\r\n</ng-template>\r\n","export class AppSettings {\r\n  public static HEADER_STRING = 'Authorization';\r\n  public static TOKEN_PREFIX = 'Bearer ';\r\n  public static LOCAL_AUTH_TOKEN = 'todoAuthToken';\r\n  public static LOCAL_AUTH_USER = 'todoAuthUser';\r\n  public static APP_BASE_URL = '';\r\n  public static TODO_ALL = 'All';\r\n  public static STATUS_NEW = 'New';\r\n  public static STATUS_IN_PROGRESS = 'In progress';\r\n  public static STATUS_COMPLETED = 'Completed';\r\n  public static STATUS_OVERDUE = 'Overdue';\r\n}\r\n","export class Util {\r\n  public static getTagClass = tag => {\r\n    return {\r\n      'tag-general': tag === 'General',\r\n      'tag-home': tag === 'Home',\r\n      'tag-office': tag === 'Office',\r\n      'tag-personal': tag === 'Personal'\r\n    };\r\n  }\r\n  public static getPriorityClass = priority => {\r\n    return {\r\n      'flag-high': priority === 'High',\r\n      'flag-medium': priority === 'Medium',\r\n      'flag-low': priority === 'Low'\r\n    };\r\n  }\r\n  public static getStatusClass = status => {\r\n    return {\r\n      'badge-danger': status === 'Overdue',\r\n      'badge-success': status === 'Completed',\r\n      'badge-primary': status === 'In progress',\r\n      'badge-info': status === 'New'\r\n    };\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ModalModule} from 'ngx-bootstrap/modal';\r\nimport { PopoverModule } from 'ngx-bootstrap/popover';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ModalModule.forRoot(), PopoverModule.forRoot()],\r\n  exports: [CommonModule, ModalModule]\r\n})\r\nexport class SharedModule {\r\n  constructor() {\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {AuthService} from '../auth.service';\r\nimport {JwtAuthenticationResponse, SignInRequest} from '../shared/model';\r\nimport {Router} from '@angular/router';\r\nimport {AppSettings} from '../shared/AppSettings';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  loginFrm: FormGroup;\r\n  message;\r\n  errors = [];\r\n\r\n  constructor(private fb: FormBuilder, private auth: AuthService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginFrm = this.fb.group({\r\n      userNameOrEmail: ['', Validators.required],\r\n      password: ['', Validators.required\r\n      ]\r\n    });\r\n  }\r\n\r\n  submit = (): void => {\r\n    if (!this.loginFrm.invalid) {\r\n      const param: SignInRequest = this.loginFrm.value;\r\n      this.auth.signIn(param).subscribe((response: JwtAuthenticationResponse) => {\r\n        this.handleToken(response);\r\n        this.auth.isLoggedIn.next(true);\r\n      }, (error => {\r\n        this.errors = [];\r\n        this.errors.push(error.statusText);\r\n        if (error.status === 400) {\r\n          this.message = 'invalid username or password';\r\n        }\r\n      }));\r\n    } else {\r\n      this.collectErrors(this.loginFrm);\r\n    }\r\n  }\r\n\r\n\r\n  collectErrors = (form?: FormGroup) => {\r\n    for (const ele in form.controls) {\r\n      if (form.controls[ele].status === 'INVALID') {\r\n        if ('required' in form.controls[ele].errors) {\r\n          this.errors.push(ele);\r\n        }\r\n      }\r\n    }\r\n    if (this.errors.length > 0) {\r\n      this.message = 'Please provide all marked <span class=\\'p-1 required\\'>*</span> information';\r\n    }\r\n  }\r\n\r\n  private handleToken = (tokenResponse: JwtAuthenticationResponse): void => {\r\n    if (!localStorage.getItem(AppSettings.LOCAL_AUTH_TOKEN)) {\r\n      localStorage.setItem(AppSettings.LOCAL_AUTH_TOKEN, tokenResponse.accessToken);\r\n      this.router.navigate(['todo']).then(r => console.log('User Token Received Successfully', r));\r\n    }\r\n  }\r\n}\r\n","<div class=\"login-section container-center\">\r\n  <div class=\"view-header\">\r\n    <div class=\"header-icon\">\r\n      <span aria-hidden=\"true\" class=\"fa fa-user-o\"></span>\r\n    </div>\r\n    <div class=\"header-title\">\r\n      <h3>Sign in to your account</h3>\r\n      <small class=\"help-block small\">\r\n        Please enter your credentials to login.\r\n      </small>\r\n    </div>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <form (ngSubmit)=\"submit()\" [formGroup]=\"loginFrm\" autocomplete=\"off\">\r\n        <div class=\"form-group\">\r\n          <label for=\"userNameOrEmail\">Username Or Email<span class=\"pl-1 required\">*</span></label>\r\n          <input class=\"form-control\" formControlName=\"userNameOrEmail\" id=\"userNameOrEmail\" name=\"userNameOrEmail\"\r\n                 placeholder=\"example@gmail.com\" type=\"text\">\r\n          <span class=\"help-block small\">Your unique username to app</span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password<span class=\"pl-1 required\">*</span></label>\r\n          <input class=\"form-control\" formControlName=\"password\" id=\"password\" placeholder=\"******\" type=\"password\">\r\n          <span class=\"help-block small\">Your strong password</span>\r\n        </div>\r\n        <div>\r\n          <button [disabled]=\"loginFrm.invalid\" class=\"btn btn-danger btn-rounded btn-sm mr-2\" type=\"submit\">Login<span\r\n            aria-hidden=\"true\" class=\"fa fa-sign-in pl-1\"></span></button>\r\n          <a class=\"btn btn-default btn-sm btn-rounded\" routerLink=\"/signup\">Register<span aria-hidden=\"true\"\r\n                                                                                           class=\"fa fa-user-plus pl-1\"></span></a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div class=\"card-footer text-center\">\r\n      <a class=\"\" routerLink=\"../forgot\">Forgot Password</a>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"errors.length>0\" class=\"card mt-2\" style=\"background-color: rgba(219, 82, 75, 0.1);\">\r\n    <div class=\"card-body\">\r\n      <span [innerHTML]=\"message\" style=\"color: #EF3D4F\"></span>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {UserService} from '../user.service';\r\nimport {SignUpRequest} from '../shared/model';\r\nimport {AuthService} from '../auth.service';\r\nimport {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css'],\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  signUp: FormGroup;\r\n  isUseNameAvailable = false;\r\n  isEmailAvailable = false;\r\n  errMessage = '';\r\n  isSuccess = false;\r\n  email;\r\n  bsConfirmationModalRef: BsModalRef = null;\r\n  @ViewChild('template') template;\r\n\r\n  // tslint:disable-next-line:max-line-length\r\n  constructor(\r\n    public bsModalService: BsModalService,\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private authService: AuthService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.signUp = this.fb.group({\r\n      username: ['', [Validators.required, Validators.minLength(6)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n    });\r\n  }\r\n\r\n  submit = (): void => {\r\n    if (!this.signUp.invalid) {\r\n      if (!this.isEmailAvailable && !this.isUseNameAvailable) {\r\n        const request: SignUpRequest = {\r\n          username: this.signUp.controls.username.value,\r\n          email: this.signUp.controls.email.value,\r\n          password: this.signUp.controls.password.value,\r\n        };\r\n        this.authService.signUp(request).subscribe(\r\n          (response) => {\r\n            this.isSuccess = true;\r\n            this.email = this.signUp.controls.email.value;\r\n            const initialState = {\r\n              email: this.email,\r\n              class: 'modal-lg modal-dialog-centered',\r\n            };\r\n            this.bsConfirmationModalRef = this.bsModalService.show(\r\n              this.template,\r\n              initialState\r\n            );\r\n            this.signUp.reset();\r\n            console.log('User account created successfully', response);\r\n          },\r\n          (error) => {\r\n            console.log('Error while creating new user profile', error);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  checkUserNameAlreadyAvailable = (key: string): void => {\r\n    if (this.signUp.controls[key].valid) {\r\n      this.userService\r\n        .isUserNameAlreadyExists(this.signUp.controls[key].value)\r\n        .subscribe(\r\n          (response) => {\r\n            this.isUseNameAvailable = response;\r\n            if (response) {\r\n              this.errMessage = 'Username already used';\r\n            } else {\r\n              this.errMessage = '';\r\n            }\r\n            console.log('username already exists', response);\r\n          },\r\n          (error) => {\r\n            this.isUseNameAvailable = false;\r\n            console.log('Error while checking username', error);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  checkEmailAlreadyAvailable = (key: string): void => {\r\n    if (this.signUp.controls[key].valid) {\r\n      this.userService\r\n        .isEmailAlreadyExists(this.signUp.controls[key].value)\r\n        .subscribe(\r\n          (response) => {\r\n            this.isEmailAvailable = response;\r\n            if (response) {\r\n              this.errMessage = 'Email already used';\r\n            } else {\r\n              this.errMessage = '';\r\n            }\r\n            console.log('Email already exists', response);\r\n          },\r\n          (error) => {\r\n            this.isEmailAvailable = false;\r\n            console.log('Error while checking email', error);\r\n          }\r\n        );\r\n    }\r\n  }\r\n}\r\n","<div class=\"login-section container-center\">\r\n  <div class=\"view-header\">\r\n    <div class=\"header-icon\">\r\n      <span aria-hidden=\"true\" class=\"fa fa-user-plus\"></span>\r\n    </div>\r\n    <div class=\"ml-2 header-title\">\r\n      <h3>Sign Up</h3>\r\n      <small class=\"help-block small\">Please enter your data to sign up.</small>\r\n    </div>\r\n  </div>\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <form (ngSubmit)=\"submit()\" [formGroup]=\"signUp\" autocomplete=\"off\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username<span class=\"pl-1 required\">*</span></label>\r\n          <input (blur)=\"checkUserNameAlreadyAvailable('username')\" class=\"form-control\" formControlName=\"username\"\r\n                 id=\"username\" name=\"username\" placeholder=\"xxxxxxxx\" type=\"text\">\r\n          <span class=\"help-block small\">Your unique username to app (minimum 6 characters)</span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email<span class=\"pl-1 required\">*</span></label>\r\n          <input (blur)=\"checkEmailAlreadyAvailable('email')\" [email] class=\"form-control\"\r\n                 formControlName=\"email\" id=\"email\" name=\"email\" placeholder=\"example@gmail.com\">\r\n          <span class=\"help-block small\">Your valid email to contact</span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password<span class=\"pl-1 required\">*</span></label>\r\n          <input class=\"form-control\" formControlName=\"password\" id=\"password\" name=\"password\" placeholder=\"******\"\r\n                 type=\"password\">\r\n          <span class=\"help-block small\">Your hard to guess password (minimum 6 characters)</span>\r\n        </div>\r\n        <div>\r\n          <button [disabled]=\"signUp.invalid || (isEmailAvailable || isUseNameAvailable) \" class=\"btn btn-danger btn-rounded btn-sm mr-2\">Register<span\r\n            aria-hidden=\"true\" class=\"fa fa-user-plus pl-1\"></span></button>\r\n          <a class=\"btn btn-default btn-sm btn-rounded\" routerLink=\"/signin\">Login<span aria-hidden=\"true\"\r\n                                                                                        class=\"fa fa-sign-in pl-1\"></span></a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"errMessage!=''\" class=\"card\" style=\"background-color: rgba(219, 82, 75, 0.1);\">\r\n    <div class=\"card-body\">\r\n      <span [innerHTML]=\"errMessage\" style=\"color: #EF3D4F\"></span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-body text-center\" style=\"cursor: pointer;\">\r\n    <h5><span aria-hidden=\"true\" class=\"fa fa-check-circle\" style=\"font-size: 48px;color: springgreen;\"></span></h5>\r\n    <h6>Your MyTodo account was successfully created.</h6>\r\n    <p>We have send account activation link to your registered mail <span\r\n      style=\"color: #007bff !important;\">{{email}}</span></p>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { TodoService } from '../todo.service';\r\nimport { TodoRequest } from '../shared/model';\r\nimport { Util } from '../shared/Util';\r\nimport { AppSettings } from '../shared/AppSettings';\r\n\r\n@Component({\r\n  selector: 'app-task',\r\n  templateUrl: './task.component.html',\r\n  styleUrls: ['./task.component.css'],\r\n})\r\nexport class TaskComponent implements OnInit {\r\n  taskName = '';\r\n  tags = ['General', 'Home', 'Office', 'Personal'];\r\n  priorities = ['Low', 'Medium', 'High'];\r\n  dates = [];\r\n  selectedTag = 'General';\r\n  selectedPriority = 'Low';\r\n  selectedDate: Date = new Date();\r\n  bsInlineValue: Date = new Date();\r\n  minDate: Date = new Date();\r\n  btnName: Date = new Date();\r\n  defaultStatus = AppSettings.STATUS_NEW;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n  util = Util;\r\n  @Output() saveEmitter: EventEmitter<any> = new EventEmitter();\r\n  constructor(public bsModalRef: BsModalRef, private todoService: TodoService) {\r\n    this.init();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.bsConfig = Object.assign({}, { containerClass: 'theme-red' });\r\n  }\r\n\r\n  saveNewTask = (): void => {\r\n    if (this.taskName.length >= 2) {\r\n      const task: TodoRequest = {\r\n        name: this.taskName,\r\n        priority: this.selectedPriority,\r\n        status: this.defaultStatus,\r\n        tag: this.selectedTag,\r\n        duedate: this.selectedDate,\r\n      };\r\n      this.todoService.saveTodo(task).subscribe(\r\n        (response) => {\r\n          this.saveEmitter.emit(response);\r\n          this.bsModalRef.hide();\r\n          console.log('todo saved successfully');\r\n        },\r\n        (error) => {\r\n          console.log('Error while saving todo', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onTagSelected = (tag: string): void => {\r\n    this.selectedTag = tag;\r\n  }\r\n\r\n  onPrioritySelected = (priority: string): void => {\r\n    this.selectedPriority = priority;\r\n  }\r\n\r\n  onDateSelected = (dt: Date): void => {\r\n    this.selectedDate = dt;\r\n    this.btnName = this.selectedDate;\r\n  }\r\n\r\n  onValueChange(value: Date): void {\r\n    this.selectedDate = value;\r\n    this.bsInlineValue = this.selectedDate;\r\n  }\r\n\r\n  private init = (): void => {\r\n    const dt = new Date();\r\n    dt.setDate(this.minDate.getDate() + 1);\r\n    this.dates.push(\r\n      { label: 'Today', value: this.minDate },\r\n      { label: 'Tomorrow', value: dt }\r\n    );\r\n  }\r\n}\r\n","<div class=\"modal-body\">\r\n  <div class=\"input-group mb-3\">\r\n    <input [(ngModel)]=\"taskName\" class=\"form-control\" placeholder=\"e.g. Hackerearth coding challenge \" type=\"text\"/>\r\n    <div class=\"input-group-append\">\r\n      <button #pop3=\"bs-popover\" [innerHTML]=\" selectedDate | date:'EEE dd'\" [outsideClick]=\"true\"\r\n              [popover]=\"calendarTemp\"\r\n              class=\"btn btn-danger btn-sm\" placement=\"bottom\">\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class=\"actions\">\r\n    <ul class=\"list-inline\">\r\n      <li class=\"list-inline-item\">\r\n        <button (click)=\"saveNewTask()\" [disabled]=\"taskName.length<2\" class=\"btn btn-danger btn-rounded btn-sm\">Add\r\n          Task\r\n        </button>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <a (click)=\"bsModalRef.hide()\" class=\"btn btn-default btn-rounded btn-sm\" href=\"javascript:void(0)\">Cancel</a>\r\n      </li>\r\n      <li class=\"list-inline-item pull-right\">\r\n        <button #pop1=\"bs-popover\" [outsideClick]=\"true\" [popover]=\"tagTemp\" class=\"btn btn-sm btn-span\"\r\n                placement=\"bottom\">\r\n          <span [ngClass]=\"util.getTagClass(selectedTag)\" aria-hidden=\"true\" class=\"fa fa-tag\"></span></button>\r\n        <button #pop2=\"bs-popover\" [outsideClick]=\"true\" [popover]=\"priorityTemp\" class=\"btn btn-sm btn-span\"\r\n                placement=\"bottom\"><span\r\n          [ngClass]=\"util.getPriorityClass(selectedPriority)\" aria-hidden=\"true\" class=\"fa fa-flag\"></span></button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<!--Tag Window Template-->\r\n<ng-template #tagTemp>\r\n  <ul class=\"tag-dropdown\">\r\n    <li (click)=\"onTagSelected(tag);pop1.hide()\" *ngFor=\"let tag of tags\" [ngClass]=\"selectedTag==tag?'tag-active':''\"\r\n        [value]=\"tag\" class=\"tag-dropdown-item\"><span [ngClass]=\"util.getTagClass(tag)\" aria-hidden=\"true\"\r\n                                                      class=\"fa fa-tag pr-2\"></span>{{tag}}</li>\r\n  </ul>\r\n</ng-template>\r\n\r\n<!--Priority Window Template -->\r\n<ng-template #priorityTemp>\r\n  <ul class=\"priority-dropdown\">\r\n    <li (click)=\"onPrioritySelected(priority);pop2.hide()\" *ngFor=\"let priority of priorities\"\r\n        [ngClass]=\"selectedPriority==priority?'priority-active':''\" [value]=\"priority\" class=\"priority-dropdown-item\">\r\n      <span [ngClass]=\"util.getPriorityClass(priority)\" aria-hidden=\"true\" class=\"fa fa-flag pr-1\"></span>{{priority}}\r\n    </li>\r\n  </ul>\r\n</ng-template>\r\n\r\n<!--Calendar Window Template-->\r\n<ng-template #calendarTemp>\r\n  <ul class=\"calendar-dropdown\" style=\"border-bottom: 1px solid #6d757d\">\r\n    <li (click)=\"onDateSelected(dt.value)\" *ngFor=\"let dt of dates\" [ngClass]=\"selectedDate==dt?'date-active':''\"\r\n        [value]=\"dt.value\"\r\n        class=\"calendar-dropdown-item\">\r\n      <span aria-hidden=\"true\" class=\"fa fa-calendar-check-o pr-2\"></span>{{dt.label}}\r\n      <span class=\"pull-right\">{{dt.value | date:'EEE dd'}}</span>\r\n    </li>\r\n  </ul>\r\n  <bs-datepicker-inline (bsValueChange)=\"onValueChange($event);\" [bsConfig]=\"bsConfig\" [bsValue]=\"bsInlineValue\"\r\n                        [minDate]=\"minDate\"></bs-datepicker-inline>\r\n</ng-template>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Todo, TodoRequest } from './shared/model';\r\nimport { AppSettings } from './shared/AppSettings';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TodoService {\r\n  private readonly MOCK_URL = './assets/mock/todos.json';\r\n  private readonly ALL_TODO_URL = 'api/v1/todos';\r\n  private readonly SAVE_TODO_URL = 'api/v1/todo';\r\n  private readonly UPDATE_TODO_URL = 'api/v1/todo';\r\n  private readonly DELETE_TODO_URL = 'api/v1/todo/';\r\n  private readonly FIND_TODO_URL = 'api/v1/todos/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllTodos = (param?: any): Observable<Todo[]> => {\r\n    return this.http\r\n      .get<Todo[]>(AppSettings.APP_BASE_URL + `${this.ALL_TODO_URL}`)\r\n      .pipe(\r\n        map((res: Todo[]) => res),\r\n        catchError((error) => {\r\n          console.log('Error while retrieving todos data', error);\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  saveTodo = (param?: TodoRequest): Observable<Todo> => {\r\n    return this.http\r\n      .post(AppSettings.APP_BASE_URL + `${this.SAVE_TODO_URL}`, param)\r\n      .pipe(\r\n        map((res: Todo) => res),\r\n        catchError((error) => {\r\n          console.log('Error while saving todo', error);\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  updateTodo = (param?: Todo): Observable<Todo> => {\r\n    return this.http\r\n      .put(AppSettings.APP_BASE_URL + `${this.UPDATE_TODO_URL}`, param)\r\n      .pipe(\r\n        map((res: Todo) => res),\r\n        catchError((error) => {\r\n          console.log('Error while updating todo', error);\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteTodo = (param?: string) => {\r\n    return this.http\r\n      .delete(AppSettings.APP_BASE_URL + `${this.DELETE_TODO_URL}` + param)\r\n      .pipe(\r\n        map((res) => res),\r\n        catchError((error) => {\r\n          console.log('Error while deleting todo', error);\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  findTodo = (param?: string): Observable<Todo> => {\r\n    return this.http\r\n      .get(AppSettings.APP_BASE_URL + `${this.FIND_TODO_URL}` + param)\r\n      .pipe(\r\n        map((res: Todo) => res),\r\n        catchError((error) => {\r\n          console.log('Error while finding todo', error);\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ColumnDef} from '../shared/model';\r\nimport {Todo} from '../shared/model';\r\nimport {TodoService} from '../todo.service';\r\nimport {BsModalService, BsModalRef} from 'ngx-bootstrap/modal';\r\nimport {TaskComponent} from '../task/task.component';\r\nimport {AppSettings} from '../shared/AppSettings';\r\n\r\n@Component({\r\n  selector: 'app-todo',\r\n  templateUrl: './todo.component.html',\r\n  styleUrls: ['./todo.component.css'],\r\n})\r\nexport class TodoComponent implements OnInit {\r\n  todoList: Todo[] = [];\r\n  columnDefs: ColumnDef[] = [];\r\n  status = '';\r\n  bsTaskModalRef: BsModalRef = null;\r\n  appSetting = AppSettings;\r\n  constructor(\r\n    private todoService: TodoService,\r\n    private bsModelService: BsModalService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n  }\r\n\r\n  getBadgeCount = (status: string): number => {\r\n    if (status === 'All') {\r\n      return this.todoList.length;\r\n    } else {\r\n      return this.todoList.filter((ele) => ele.status === status).length;\r\n    }\r\n  }\r\n\r\n  deleteTodo = (id: string): void => {\r\n    this.todoService.deleteTodo(id).subscribe((res) => {\r\n      this.getAllTodo();\r\n      console.log('todo deleted successfully', res);\r\n    }, error => {\r\n      console.log('error in deleting todo', error);\r\n    });\r\n  }\r\n\r\n  updateTodo = (): void => {\r\n    this.getAllTodo();\r\n  }\r\n\r\n  openTaskComp = (): void => {\r\n    this.bsTaskModalRef = this.bsModelService.show(TaskComponent, {\r\n      class: 'modal-lg',\r\n    });\r\n    this.bsTaskModalRef.content.saveEmitter.subscribe((data) => {\r\n      console.log('todo saved', data);\r\n      this.getAllTodo();\r\n    });\r\n  }\r\n\r\n  filterData = (status) => (this.status = status);\r\n\r\n  private init = (): void => {\r\n    this.getAllTodo();\r\n    this.getColumnsDef();\r\n  }\r\n\r\n  private getAllTodo = (): void => {\r\n    this.todoService\r\n      .getAllTodos()\r\n      .subscribe((response) => (this.todoList = response));\r\n  }\r\n\r\n  private getColumnsDef = (): void => {\r\n    this.columnDefs.push({prop: 'id', displayName: 'Id', width: 3});\r\n    this.columnDefs.push({prop: 'name', displayName: 'Name', width: 15});\r\n    this.columnDefs.push({prop: 'tag', displayName: 'Tag', width: 5});\r\n    this.columnDefs.push({\r\n      prop: 'priority',\r\n      displayName: 'Priority',\r\n      width: 5,\r\n    });\r\n    this.columnDefs.push({prop: 'status', displayName: 'Status', width: 5});\r\n    this.columnDefs.push({prop: 'duedate', displayName: 'DueDate', width: 5});\r\n    this.columnDefs.push({prop: '', displayName: '', width: 5});\r\n  }\r\n}\r\n","<div clas=\"row\">\r\n  <div class=\"col-sm-12 col-md-12 col-lg-12 pl-0\">\r\n    <ul class=\"list-inline pt-2\">\r\n      <li class=\"list-inline-item\">\r\n        <a (click)=\"filterData('')\" class=\"btn btn-default btn-rounded btn-sm\" href=\"javascript:void(0)\" placement=\"bottom\"\r\n           tooltip=\"All\">All\r\n        </a>\r\n        <span [innerHTML]=\"getBadgeCount(appSetting.TODO_ALL)\" class=\"badge badge-dark\"></span>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <a (click)=\"filterData(appSetting.STATUS_NEW)\" class=\"btn btn-info btn-rounded btn-sm\" href=\"javascript:void(0)\" placement=\"bottom\" tooltip=\"New\">New</a>\r\n        <span [innerHTML]=\"getBadgeCount(appSetting.STATUS_NEW)\" class=\"badge badge-info\">New</span>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <a (click)=\"filterData(appSetting.STATUS_IN_PROGRESS)\" class=\"btn btn-primary btn-rounded btn-sm\" href=\"javascript:void(0)\" placement=\"bottom\"\r\n           tooltip=\"In Progress\">In Progress\r\n        </a>\r\n        <span [innerHTML]=\"getBadgeCount(appSetting.STATUS_IN_PROGRESS)\" class=\"badge badge-primary\"></span>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <a (click)=\"filterData(appSetting.STATUS_COMPLETED)\" class=\"btn btn-success btn-rounded btn-sm\" href=\"javascript:void(0)\" placement=\"bottom\"\r\n           tooltip=\"Completed\">Completed\r\n        </a>\r\n        <span [innerHTML]=\"getBadgeCount(appSetting.STATUS_COMPLETED)\" class=\"badge badge-success\"></span>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <a (click)=\"filterData(appSetting.STATUS_OVERDUE)\" class=\"btn btn-danger btn-rounded btn-sm\" href=\"javascript:void(0)\" placement=\"bottom\"\r\n           tooltip=\"Overdue\">Overdue\r\n        </a>\r\n        <span [innerHTML]=\"getBadgeCount(appSetting.STATUS_OVERDUE)\" class=\"badge badge-danger\"></span>\r\n      </li>\r\n      <li class=\"list-inline-item pull-right\">\r\n        <span (click)=\"openTaskComp()\"><i aria-hidden=\"true\" class=\"fa fa-plus-circle\"></i></span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12 col-md-12 col-lg-12\">\r\n    <div class=\"table-responsive\">\r\n      <app-data-grid (deleteEmitter)=\"deleteTodo($event)\" (updateEmitter)=\"updateTodo()\"\r\n                     [columnDefs]=\"columnDefs\" [height]=\"500\"\r\n                     [todoList]=\"todoList | dataFilter:status:'status'\"></app-data-grid>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { UserDetailResponse } from './shared/model';\r\nimport { AppSettings } from './shared/AppSettings';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  private readonly USER_ME_URL = 'api/v1/users/active';\r\n  private readonly IS_EMAIL_EXISTS_URL = 'api/v1/users/isEmailExists/';\r\n  private readonly IS_USERNAME_EXISTS_URL = 'api/v1/users/isUsernameExists/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUserDetails = (param?: any): Observable<UserDetailResponse> => {\r\n    return this.http\r\n      .get<UserDetailResponse>(AppSettings.APP_BASE_URL + `${this.USER_ME_URL}`)\r\n      .pipe(\r\n        map((response: UserDetailResponse) => response),\r\n        catchError((error) => {\r\n          console.log('Error while retrieving getting user detail', error);\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  isEmailAlreadyExists = (email: string): Observable<boolean> => {\r\n    return this.http\r\n      .get<boolean>(\r\n        AppSettings.APP_BASE_URL + `${this.IS_EMAIL_EXISTS_URL}` + email\r\n      )\r\n      .pipe(\r\n        map((res) => res),\r\n        catchError((error) => {\r\n          console.log('Error in while checking email ', error);\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  isUserNameAlreadyExists = (username: string): Observable<boolean> => {\r\n    return this.http\r\n      .get<boolean>(\r\n        AppSettings.APP_BASE_URL + `${this.IS_USERNAME_EXISTS_URL}` + username\r\n      )\r\n      .pipe(\r\n        map((res) => res),\r\n        catchError((error) => {\r\n          console.log('Error in while checking username ', error);\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}